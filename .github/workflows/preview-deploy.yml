name: Deploy preview

on:
  push:
    branches-ignore:
      - main

  workflow_dispatch:

jobs:
  terraform_provision:
    name: Provision preview infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Setup sops
        uses: mdgreenwald/mozilla-sops-action@v1.4.1

      - name: Login to AWS
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile safetynet
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile safetynet

      - name: Terraform init
        run: |
          ./infrastructure/scripts/terraform.sh preview data init
          ./infrastructure/scripts/terraform.sh preview compute init
        env:
          TF_STATE_SUFFIX: -${{ env.GITHUB_REF_NAME_SLUG }}
          TF_VAR_preview_name: ${{ env.GITHUB_REF_NAME_SLUG }}

      - name: Terraform apply
        run: |
          ./infrastructure/scripts/terraform.sh preview data apply -auto-approve
          ./infrastructure/scripts/terraform.sh preview compute apply -auto-approve
        env:
          TF_VAR_preview_name: ${{ env.GITHUB_REF_NAME_SLUG }}

  docker_image_build:
    name: Build Docker image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags:
            ghcr.io/${{ github.repository }}-api:${{ env.GITHUB_REF_NAME_SLUG }},
            ghcr.io/${{ github.repository }}-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  ansible_playbook:
    name: Run Ansible playbook
    runs-on: ubuntu-latest

    needs:
      - terraform_provision
      - docker_image_build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "./infrastructure/ansible/requirements.txt"

      - name: Install Ansible
        run: |
          pip install -r ./infrastructure/ansible/requirements.txt

      - name: Install Ansible dependencies
        run: |
          ansible-galaxy install -r ./infrastructure/ansible/requirements.yml

      - name: Setup sops
        uses: mdgreenwald/mozilla-sops-action@v1.4.1

      - name: Login to AWS
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile safetynet
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile safetynet

      - name: Run Ansible playbook
        run: |
          eval $(ssh-agent)
          ./infrastructure/scripts/ansible-playbook.sh preview api \
            --limit "preview_$(echo $GITHUB_REF_NAME_SLUG | sed 's/-/_/g')" \
            -e docker_tag=$PREVIEW_NAME \
            -e api_domain=safetynet-api-preview-$PREVIEW_NAME.dump.hr
        env:
          PREVIEW_NAME: ${{ env.GITHUB_REF_NAME_SLUG }}

  vite_static_build:
    name: Vite static build and deploy
    runs-on: ubuntu-latest

    needs:
      - terraform_provision

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 18.x
          cache: "yarn"
          cache-dependency-path: ./frontend/yarn.lock

      - name: Login to AWS
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile safetynet
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile safetynet

      - name: Set API endpoint in .env file
        run: |
          echo "VITE_APP_API_ENDPOINT=https://safetynet-api-preview-$PREVIEW_NAME.dump.hr" >> frontend/.env
        env:
          PREVIEW_NAME: ${{ env.GITHUB_REF_NAME_SLUG }}

      - name: Run build and deploy script
        run: |
          ./infrastructure/scripts/static-build-deploy.sh ./frontend safetynet-web-preview-$PREVIEW_NAME
        env:
          PREVIEW_NAME: ${{ env.GITHUB_REF_NAME_SLUG }}
          AWS_PROFILE: safetynet
          AWS_REGION: us-east-1
